#!/bin/sh

#PL="/scriptek/1_OS_BUILDER/Test04/tmp/chooser_pkg_list"

echo -e "\n Package expansion - Check/add dependencies...\n" >> "$LOG"

F="$PFL"
F2="${F}_2"

GREPV=''
[ "$ARCH" == "i386" ]&& GREPV="amd64"

rm -f ${F}*
touch $F $F2

echo -n " Convert repository for fast working..."

grep -R "^Package: \|^Depends: " $RD/* | cut -f2- -d: |
sed 's/ //g ; s/^Depends// ; s/^Package:/||/' | tr -d '\n' |
sed -e 's/||/\n/g ; s/([^)]*)\|:[^,]*,//g' |
sed "/^gcc\-\|cross\|^libc6-x32\|^ucf/d" |
sed '/^xserver-xorg:/s/python[0-9]-apport//;
/^lxde:/s/leafpad/geany/;
/^fontconfig-config/s/ucf,//
s/|debconf-2\.0//g' > $RF

echo "   DONE"

cat $PL | tee $F $F2 | sed 's/^/ > add /' >> "$LOG"

DEFAULT_PKGS="debconf perl-base apt apt-utils dpkg bash binutils
busybox coreutils disktype findutils fuse gzip kmod mingetty
ncurses-base readline-common sed udev unzip util-linux zip zlib1g"

for i in $DEFAULT_PKGS;do
[ ! "$(cat $F2 | grep "^${i}$")" ]&&\
echo "$i" | tee -a "$F" "$F2" | sed 's/^/ > add /' >> "$LOG"
done

while [ "$(cat $F)" != '' ];do
 SP="$(cat $F | head -n1)"
 [ -z "$(grep "^${SP}:" $RF)" ]&&\
 echo " ! Failed: not found $SP package in the repository" &&\
 SP=''
 
 if [ "$SP" ];then
 echo " # Check dependencies for $SP" >> "$LOG"
 
 #add depending pkgs
 
 # for X
 [ "$(grep "libx11.*" <<< "$SP")" -a ! "$(cat $F2 | grep "^xorg$")" ]&&\
 echo -e "xorg\nmesa-utils\nmesa-vdpau-drivers\nllvm\ndesktop-file-utils
libegl1-mesa\nlibegl-mesa0\nlibgl1-mesa-dri\nlibgl1-mesa-glx\nlibglapi-mesa\nlibglx-mesa0
xinit\nxdg-utils\nxserver-xorg-input-all" | tee -a "$F" "$F2" | sed 's/^/ > add /' >> "$LOG"

 # for synaptic
 [ "$(grep "libx11.*" <<< "$SP")" -a ! "$(cat $F2 | grep "^synaptic$")" ]&&\
 echo synaptic | tee -a "$F" "$F2" | sed 's/^/ > add /' >> "$LOG"

 # for wayland (gtk3)
 [ "$(grep "libwayland.*" <<< "$SP")" -a ! "$(cat $F2 | grep "^libwayland-egl1-mesa")" ]&&\
 echo "libwayland-egl1-mesa" | tee -a "$F" "$F2" | sed 's/^/ > add /' >> "$LOG"

 # for sound (ALSA)
 [ "$(grep "libasound.*" <<< "$SP")" -a ! "$(cat $F2 | grep "^alsa-base$")" ]&&\
 echo -e "alsa-base\nalsa-utils\ndialog" | tee -a "$F" "$F2" | sed 's/^/ > add /' >> "$LOG"

 # for print
 [ "$(cat $F2 | grep "^cups$")" ]&&\
 echo -e "cups\ncups-pdf\nprinter-driver-cups-pdf\ncups-bsd\n" |
 tee -a "$F" "$F2" | sed 's/^/ > add /' >> "$LOG"

 #####################

  NPKGS="$(grep "^${SP}:" $RF | cut -f2- -d':' | sed -e 's/,/\n/g')"

  if [ "$NPKGS" ];then
  
  #remove/replace pkgs
  [ "$SP" == "xorg" ]&& NPKGS="$(sed 's/gnome-terminal/lxterminal/' <<< "$NPKGS")"
  [ "$SP" == "xserver-xorg" ]&& NPKGS="$(sed '/python[0-9]-apport/d' <<< "$NPKGS")"
  [ "$SP" == "lxde" ]&& NPKGS="$(sed 's/leafpad/geany/' <<< "$NPKGS")"
  ##################### 
   for i in $NPKGS;do
   if [ "$(grep '|' <<< "$i")" ];then
   GREP="$(tr '|' '\n' <<< "$i" | sed 's/^/\\|\^/ ; s/$/\$/ ; 1s/^..//' | tr -d '\n')"
   [ "$(grep -e "${GREP}" $F2)" != '' ]&& break
   echo " # STOP: Choose dependency for $SP :" >> "$LOG"
   LIST="$(echo "$i" | tr '|' '\n' | grep -n .)"
   echo "$LIST"   
   while [ -z "$i2" ];do
   read -p " Choose number: " i2
   i="$(grep "${i2}:" <<< "$LIST" | cut -f2 -d:)"
   [ -z "$i" ]&& i2=''
   done
   i2=''
   fi
   if [ ! "$(grep "^$i$" $F2)" ];then
	if [ ! "$(grep ".*cross.*\|.*$GREPV.*\|.*dev.*\|libc6-x32\|gcc\-[0-9]\-base" <<< "$i")" ];then
    tee -a $F $F2 <<< "$i" | sed 's/^/ > add /' >> "$LOG"
    fi
   fi
   done
  fi
 [ "$(cat $F)" != '' ]&& sed -i '/^$/d' "$F" && sed -i '1 d' "$F"
 fi
done

cat $F2 | sort | uniq > $F && rm $F2
